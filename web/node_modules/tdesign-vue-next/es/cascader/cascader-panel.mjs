/**
 * tdesign v1.15.5
 * (c) 2025 tdesign
 * @license MIT
 */

import { defineComponent, createVNode } from 'vue';
import Panel from './components/Panel.mjs';
import props from './props.mjs';
import { useCascaderContext } from './hooks/index.mjs';
import '../_chunks/dep-c6e31930.mjs';
import '../_chunks/dep-01197c66.mjs';
import '../_chunks/dep-e4f02334.mjs';
import './components/Item.mjs';
import 'tdesign-icons-vue-next';
import './utils/index.mjs';
import './utils/className.mjs';
import '../_chunks/dep-7192c25c.mjs';
import '../_chunks/dep-703fa035.mjs';
import './utils/effect.mjs';
import '../_chunks/dep-4d1211d3.mjs';
import 'lodash-es';
import './utils/helper.mjs';
import '../checkbox/index.mjs';
import '../checkbox/checkbox.mjs';
import '../checkbox/props.mjs';
import '../_chunks/dep-0e2cdfe7.mjs';
import '../_chunks/dep-c03b010b.mjs';
import '../_chunks/dep-e04daa35.mjs';
import '../config-provider/hooks/useConfig.mjs';
import '../config-provider/utils/context.mjs';
import '../_chunks/dep-80c6ca3d.mjs';
import '../_chunks/dep-6a94a546.mjs';
import '../_chunks/dep-93b6fe86.mjs';
import '../_chunks/dep-3f507036.mjs';
import '../_chunks/dep-c5ec5f16.mjs';
import '../_chunks/dep-cd264108.mjs';
import '../_chunks/dep-7895b00e.mjs';
import '../_chunks/dep-db87d252.mjs';
import '../checkbox/consts/index.mjs';
import '../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../checkbox/hooks/useKeyboardEvent.mjs';
import '../checkbox/group.mjs';
import '../checkbox/checkbox-group-props.mjs';
import './style/css.mjs';
import '../loading/index.mjs';
import '../loading/directive.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_chunks/dep-5b384966.mjs';
import '../_chunks/dep-42bba769.mjs';
import '../loading/props.mjs';
import '../_chunks/dep-9ee546a2.mjs';
import 'mitt';
import '../_chunks/dep-ed029945.mjs';
import '../_chunks/dep-d62545ee.mjs';
import '../_chunks/dep-e37c3d71.mjs';

var _CascaderPanel = defineComponent({
  name: "TCascaderPanel",
  props: props,
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var _useCascaderContext = useCascaderContext(props2),
      cascaderContext = _useCascaderContext.cascaderContext;
    return function () {
      return createVNode(Panel, {
        "trigger": props2.trigger,
        "cascaderContext": cascaderContext.value,
        "empty": props2.empty
      }, {
        empty: slots.empty,
        option: slots.option,
        loadingText: slots.loadingText
      });
    };
  }
});

export { _CascaderPanel as default };
//# sourceMappingURL=cascader-panel.mjs.map
