/**
 * tdesign v1.15.5
 * (c) 2025 tdesign
 * @license MIT
 */

import '../utils/adapt.mjs';
import { u as usePrefixClass } from '../../_chunks/dep-0e2cdfe7.mjs';
import 'vue';
import '../../_chunks/dep-c03b010b.mjs';
import '../../_chunks/dep-e04daa35.mjs';
import 'lodash-es';
import 'tdesign-icons-vue-next';
import '../../checkbox/index.mjs';
import '../../checkbox/checkbox.mjs';
import '../../_chunks/dep-4d1211d3.mjs';
import '../../_chunks/dep-703fa035.mjs';
import '../../_chunks/dep-c6e31930.mjs';
import '../../_chunks/dep-01197c66.mjs';
import '../../_chunks/dep-e4f02334.mjs';
import '../../checkbox/props.mjs';
import '../../checkbox/consts/index.mjs';
import '../../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../../_chunks/dep-3f507036.mjs';
import '../../checkbox/hooks/useKeyboardEvent.mjs';
import '../../_chunks/dep-db87d252.mjs';
import '../../_chunks/dep-7192c25c.mjs';
import '../../config-provider/hooks/useConfig.mjs';
import '../../config-provider/utils/context.mjs';
import '../../_chunks/dep-80c6ca3d.mjs';
import '../../_chunks/dep-6a94a546.mjs';
import '../../_chunks/dep-93b6fe86.mjs';
import '../../_chunks/dep-c5ec5f16.mjs';
import '../../_chunks/dep-cd264108.mjs';
import '../../_chunks/dep-7895b00e.mjs';
import '../../checkbox/group.mjs';
import '../../checkbox/checkbox-group-props.mjs';
import './style/css.mjs';
import '../../loading/index.mjs';
import '../../loading/directive.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_chunks/dep-5b384966.mjs';
import '../../_chunks/dep-42bba769.mjs';
import '../../loading/props.mjs';
import '../../_chunks/dep-ed029945.mjs';
import '../../_chunks/dep-d62545ee.mjs';
import '../../_chunks/dep-e37c3d71.mjs';

function useItemEvents(state) {
  var context = state.context;
  var classPrefix = usePrefixClass().value;
  var handleChange = function handleChange(_, ctx) {
    var node = state.node;
    var event = new Event("change");
    var evtContext = {
      event: event,
      node: node
    };
    context.emit("change", evtContext, ctx);
  };
  var clicked = false;
  var handleClick = function handleClick(evt) {
    var _srcTarget$className, _srcTarget$className$;
    var node = state.node,
      treeScope = state.treeScope;
    var _treeScope$treeProps = treeScope.treeProps,
      treeProps = _treeScope$treeProps === void 0 ? {} : _treeScope$treeProps;
    var expandOnClickNode = treeProps.expandOnClickNode;
    var srcTarget = evt.target;
    var isBranchTrigger = node.children && expandOnClickNode && (srcTarget.className === "".concat(classPrefix, "-checkbox__input") || srcTarget.tagName.toLowerCase() === "input");
    if (clicked || isBranchTrigger) return;
    clicked = true;
    setTimeout(function () {
      clicked = false;
    });
    if (expandOnClickNode && node.children && ((_srcTarget$className = srcTarget.className) === null || _srcTarget$className === void 0 || (_srcTarget$className$ = _srcTarget$className.indexOf) === null || _srcTarget$className$ === void 0 ? void 0 : _srcTarget$className$.call(_srcTarget$className, "".concat(classPrefix, "-tree__label"))) !== -1) evt.preventDefault();
    var evtContext = {
      mouseEvent: evt,
      event: evt,
      node: node,
      path: node.getPath()
    };
    context.emit("click", evtContext);
  };
  return {
    handleChange: handleChange,
    handleClick: handleClick
  };
}

export { useItemEvents as default };
//# sourceMappingURL=useItemEvents.mjs.map
