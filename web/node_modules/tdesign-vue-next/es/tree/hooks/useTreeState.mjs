/**
 * tdesign v1.15.5
 * (c) 2025 tdesign
 * @license MIT
 */

import { useVModel } from '../utils/adapt.mjs';
import { ref, toRefs } from 'vue';
import '../../_chunks/dep-0e2cdfe7.mjs';
import 'lodash-es';
import '../../_chunks/dep-7192c25c.mjs';
import '../../_chunks/dep-703fa035.mjs';
import '../../_chunks/dep-e4f02334.mjs';
import '../../_chunks/dep-c03b010b.mjs';
import '../../_chunks/dep-e04daa35.mjs';
import '../../config-provider/hooks/useConfig.mjs';
import '../../config-provider/utils/context.mjs';
import '../../_chunks/dep-80c6ca3d.mjs';
import '../../_chunks/dep-6a94a546.mjs';
import '../../_chunks/dep-93b6fe86.mjs';
import '../../_chunks/dep-4d1211d3.mjs';
import '../../_chunks/dep-3f507036.mjs';
import '../../_chunks/dep-c5ec5f16.mjs';
import '../../_chunks/dep-cd264108.mjs';
import '../../_chunks/dep-7895b00e.mjs';
import '../../_chunks/dep-01197c66.mjs';
import '../../_chunks/dep-c6e31930.mjs';
import '../../_chunks/dep-db87d252.mjs';
import 'tdesign-icons-vue-next';
import '../../checkbox/index.mjs';
import '../../checkbox/checkbox.mjs';
import '../../checkbox/props.mjs';
import '../../checkbox/consts/index.mjs';
import '../../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../../checkbox/hooks/useKeyboardEvent.mjs';
import '../../checkbox/group.mjs';
import '../../checkbox/checkbox-group-props.mjs';
import './style/css.mjs';
import '../../loading/index.mjs';
import '../../loading/directive.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_chunks/dep-5b384966.mjs';
import '../../_chunks/dep-42bba769.mjs';
import '../../loading/props.mjs';
import '../../_chunks/dep-ed029945.mjs';
import '../../_chunks/dep-d62545ee.mjs';
import '../../_chunks/dep-e37c3d71.mjs';

function useTreeState(props, context) {
  var treeContentRef = ref();
  var nodes = ref([]);
  var allNodes = ref([]);
  var isScrolling = ref(false);
  var refProps = toRefs(props);
  var vmValue = useVModel(props, refProps, "value", "defaultValue", "onChange", "change");
  var vmActived = useVModel(props, refProps, "actived", "defaultActived", "onActive", "active");
  var vmExpanded = useVModel(props, refProps, "expanded", "defaultExpanded", "onExpand", "expand");
  function setStore(store) {
    state.store = store;
    state.scope.store = store;
    allNodes.value = store.getNodes();
  }
  var state = {
    props: props,
    context: context,
    store: null,
    treeContentRef: treeContentRef,
    nodes: nodes,
    allNodes: allNodes,
    isScrolling: isScrolling,
    mouseEvent: null,
    virtualConfig: null,
    scope: {
      store: null,
      treeContentRef: treeContentRef,
      treeProps: props,
      scopedSlots: {},
      virtualConfig: null
    },
    setStore: setStore,
    refProps: refProps,
    vmValue: vmValue,
    vmActived: vmActived,
    vmExpanded: vmExpanded
  };
  return {
    state: state
  };
}

export { useTreeState as default };
//# sourceMappingURL=useTreeState.mjs.map
