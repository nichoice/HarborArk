/**
 * tdesign v1.15.5
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var _regeneratorRuntime = require('@babel/runtime/regenerator');
var radio_radioGroupProps = require('./radio-group-props.js');
var radio_radio = require('./radio.js');
var radio_radioButton = require('./radio-button.js');
var radio_consts_index = require('./consts/index.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-0735d63b.js');
var index$4 = require('../_chunks/dep-01130408.js');
var index$2 = require('../_chunks/dep-7828ec02.js');
var index$1 = require('../_chunks/dep-63bfc2fb.js');
require('../_chunks/dep-a4a942c3.js');
var index$3 = require('../_chunks/dep-f1d29706.js');
var index = require('../_chunks/dep-2e137265.js');
var radio_hooks_useKeyboard = require('./hooks/useKeyboard.js');
var watermark_hooks_index = require('../watermark/hooks/index.js');
var throttle = require('../_chunks/dep-31c65b18.js');
var isEqual = require('../_chunks/dep-0c1f614d.js');
var isNil = require('../_chunks/dep-220eb941.js');
var isNumber = require('../_chunks/dep-6281e9d2.js');
var isString = require('../_chunks/dep-d108653b.js');
var isFunction = require('../_chunks/dep-fca60f44.js');
require('../_chunks/dep-b1cffc1c.js');
require('../_chunks/dep-0cf0bc29.js');
require('../_chunks/dep-4086f164.js');
require('../_chunks/dep-b3f3f98b.js');
require('../_chunks/dep-53661416.js');
require('./props.js');
require('../_chunks/dep-8828ecbe.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../_chunks/dep-768729ab.js');
require('../_chunks/dep-694e599d.js');
require('../_chunks/dep-bc6186ff.js');
require('../_chunks/dep-b0d4d0b9.js');
require('../_chunks/dep-1590b32e.js');
require('../_chunks/dep-f8c2f074.js');
require('../_chunks/dep-3e114850.js');
require('../_chunks/dep-b639c1c1.js');
require('../_chunks/dep-2c7d4d23.js');
require('../_chunks/dep-585a9bde.js');
require('../_chunks/dep-eb7d956f.js');
require('../_chunks/dep-def51c16.js');
require('../_chunks/dep-70a764ff.js');
require('../_chunks/dep-30330e5f.js');
require('../_chunks/dep-107cac75.js');
require('../_chunks/dep-8a1d4392.js');
require('../_chunks/dep-d51393ab.js');
require('../_chunks/dep-bf8b0575.js');
require('../_chunks/dep-b2793617.js');
require('../_chunks/dep-470fd721.js');
require('../_chunks/dep-c24fecfd.js');
require('../_chunks/dep-de8fe3e3.js');
require('../_chunks/dep-d04d0634.js');
require('../_chunks/dep-93f95d13.js');
require('../_chunks/dep-ff8fcf16.js');
require('../_chunks/dep-91320004.js');
require('dayjs');
require('../_chunks/dep-08f1a433.js');
require('../_chunks/dep-2a053834.js');
require('../_chunks/dep-86c7017f.js');
require('../_chunks/dep-a540990f.js');
require('../_chunks/dep-0d2b5e58.js');
require('../_chunks/dep-6b73e8fe.js');
require('../_chunks/dep-42015aef.js');
require('../_chunks/dep-d05f7718.js');
require('../_chunks/dep-b1b934d4.js');
require('../config-provider/hooks/useConfig.js');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/helpers/classCallCheck');
require('../_chunks/dep-a53f7917.js');
require('../_chunks/dep-ff70e013.js');
require('../_chunks/dep-15f28039.js');
require('../_chunks/dep-93db0d6c.js');
require('../_chunks/dep-4a361d8b.js');
require('../_chunks/dep-391a0ac9.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _asyncToGenerator__default = /*#__PURE__*/_interopDefaultLegacy(_asyncToGenerator);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _Group = Vue.defineComponent({
  name: "TRadioGroup",
  props: radio_radioGroupProps["default"],
  setup: function setup(props2) {
    var _toRefs = Vue.toRefs(props2),
      value = _toRefs.value,
      modelValue = _toRefs.modelValue;
    var _useVModel = index.useVModel(value, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray__default["default"](_useVModel, 2),
      innerValue = _useVModel2[0],
      setInnerValue = _useVModel2[1];
    var radioGroupRef = Vue.ref();
    var radioBtnName = index$1.usePrefixClass("radio-button");
    var _useCommonClassName = index$2.useCommonClassName(),
      STATUS = _useCommonClassName.STATUS,
      SIZE = _useCommonClassName.SIZE;
    var updateInnerValue = function updateInnerValue(value2, context) {
      if (isEqual.isEqual(value2, innerValue.value)) return;
      setInnerValue(value2, context);
    };
    radio_hooks_useKeyboard.useKeyboard(radioGroupRef, updateInnerValue);
    var checkedClassName = Vue.computed(function () {
      return ".".concat(radioBtnName.value, ".").concat(STATUS.value.checked);
    });
    var barStyle = Vue.ref({
      width: "0px",
      height: "0px",
      left: "0px",
      top: "0px",
      "transition-property": "none"
    });
    var calcDefaultBarStyle = function calcDefaultBarStyle() {
      var div = document.createElement("div");
      div.setAttribute("style", "position: absolute; visibility: hidden;");
      div.appendChild(radioGroupRef.value.cloneNode(true));
      document.body.appendChild(div);
      var defaultCheckedRadio = div.querySelector(checkedClassName.value);
      var offsetWidth = defaultCheckedRadio.offsetWidth,
        offsetHeight = defaultCheckedRadio.offsetHeight,
        offsetLeft = defaultCheckedRadio.offsetLeft,
        offsetTop = defaultCheckedRadio.offsetTop;
      barStyle.value = _objectSpread(_objectSpread({}, barStyle.value), {}, {
        width: "".concat(offsetWidth, "px"),
        height: "".concat(offsetHeight, "px"),
        left: "".concat(offsetLeft, "px"),
        top: "".concat(offsetTop, "px")
      });
      document.body.removeChild(div);
    };
    var calcBarStyle = function calcBarStyle() {
      var disableAnimation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      if (props2.variant === "outline") return;
      var checkedRadio = radioGroupRef.value.querySelector(checkedClassName.value);
      var transitionProperty = disableAnimation ? "none" : "all";
      if (!checkedRadio) {
        barStyle.value = {
          "transition-property": transitionProperty,
          width: "0px",
          height: "9px",
          left: "0px",
          top: "0px"
        };
        return;
      }
      var offsetWidth = checkedRadio.offsetWidth,
        offsetHeight = checkedRadio.offsetHeight,
        offsetLeft = checkedRadio.offsetLeft,
        offsetTop = checkedRadio.offsetTop;
      if (!offsetWidth) {
        calcDefaultBarStyle();
      } else {
        barStyle.value = {
          "transition-property": transitionProperty,
          width: "".concat(offsetWidth, "px"),
          height: "".concat(offsetHeight, "px"),
          left: "".concat(offsetLeft, "px"),
          top: "".concat(offsetTop, "px")
        };
      }
    };
    var observerReturn;
    Vue.watch(innerValue, /*#__PURE__*/_asyncToGenerator__default["default"](/*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee() {
      return _regeneratorRuntime__default["default"].wrap(function (_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 1;
            return Vue.nextTick();
          case 1:
            calcBarStyle();
          case 2:
          case "end":
            return _context.stop();
        }
      }, _callee);
    })));
    Vue.onMounted(function () {
      calcBarStyle(true);
      index$3.useResizeObserver(radioGroupRef, throttle.throttle(/*#__PURE__*/_asyncToGenerator__default["default"](/*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee2() {
        return _regeneratorRuntime__default["default"].wrap(function (_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 1;
              return Vue.nextTick();
            case 1:
              calcBarStyle();
            case 2:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      })), 300));
      var checkedRadioLabel = radioGroupRef.value.querySelector("".concat(checkedClassName.value, " .").concat(radioBtnName.value, "__label"));
      if (checkedRadioLabel) {
        observerReturn = watermark_hooks_index.useMutationObserver(checkedRadioLabel, function (mutations) {
          mutations.forEach(function (mutation) {
            if (mutation.type === "characterData") {
              calcBarStyle();
            }
          });
        }, {
          attributes: true,
          childList: true,
          characterData: true,
          subtree: true
        });
      }
    });
    Vue.onUnmounted(function () {
      var _observerReturn;
      (_observerReturn = observerReturn) === null || _observerReturn === void 0 || _observerReturn.stop();
    });
    var _toRefs2 = Vue.toRefs(props2),
      name = _toRefs2.name,
      disabled = _toRefs2.disabled,
      readonly = _toRefs2.readonly;
    Vue.provide(radio_consts_index.RadioGroupInjectionKey, Vue.reactive({
      name: name,
      disabled: disabled,
      readonly: readonly,
      value: innerValue,
      allowUncheck: props2.allowUncheck,
      setValue: updateInnerValue
    }));
    var radioGroupName = index$1.usePrefixClass("radio-group");
    var renderSlot = index$4.useTNodeDefault();
    var renderBlock = function renderBlock() {
      if (props2.variant.includes("filled") && !isNil.isNil(innerValue.value)) return Vue.createVNode("div", {
        "style": barStyle.value,
        "class": "".concat(radioGroupName.value, "__bg-block")
      }, null);
    };
    var renderOptions = function renderOptions() {
      var _props2$options;
      return (_props2$options = props2.options) === null || _props2$options === void 0 ? void 0 : _props2$options.map(function (option) {
        var opt = option;
        if (isNumber.isNumber(option) || isString.isString(option)) {
          opt = {
            value: option,
            label: option.toString()
          };
        }
        var RadioComponent = props2.theme === "button" ? radio_radioButton["default"] : radio_radio["default"];
        return Vue.createVNode(RadioComponent, {
          "key": "radio-group-options-".concat(opt.value, "-").concat(Math.random()),
          "name": props2.name,
          "checked": innerValue.value === opt.value,
          "disabled": "disabled" in opt ? opt.disabled : props2.disabled,
          "value": opt.value
        }, {
          "default": function _default() {
            return [isFunction.isFunction(opt.label) ? opt.label(Vue.h) : opt.label];
          }
        });
      });
    };
    var groupClass = Vue.computed(function () {
      return ["".concat(radioGroupName.value), SIZE.value[props2.size], _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(radioGroupName.value, "__outline"), props2.variant === "outline"), "".concat(radioGroupName.value, "--filled"), props2.variant.includes("filled")), "".concat(radioGroupName.value, "--primary-filled"), props2.variant === "primary-filled")];
    });
    return function () {
      return Vue.createVNode("div", {
        "ref": radioGroupRef,
        "class": groupClass.value
      }, [renderSlot("default") || renderOptions(), renderBlock()]);
    };
  }
});

exports["default"] = _Group;
//# sourceMappingURL=group.js.map
