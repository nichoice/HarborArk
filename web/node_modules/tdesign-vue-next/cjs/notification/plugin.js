/**
 * tdesign v1.15.5
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var notification_notificationList = require('./notification-list.js');
var dom = require('../_chunks/dep-a540990f.js');
require('./notification.js');
require('tdesign-icons-vue-next');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-0735d63b.js');
require('../_chunks/dep-91320004.js');
require('../_chunks/dep-01130408.js');
require('../_chunks/dep-0d2b5e58.js');
require('../_chunks/dep-eb7d956f.js');
require('../_chunks/dep-d108653b.js');
require('../_chunks/dep-4086f164.js');
require('../_chunks/dep-bc6186ff.js');
require('../_chunks/dep-b3f3f98b.js');
require('../_chunks/dep-6b73e8fe.js');
require('../_chunks/dep-1590b32e.js');
require('../_chunks/dep-f8c2f074.js');
require('../_chunks/dep-42015aef.js');
require('../_chunks/dep-d04d0634.js');
require('../_chunks/dep-d05f7718.js');
require('../_chunks/dep-b1b934d4.js');
require('../_chunks/dep-fca60f44.js');
require('../_chunks/dep-63bfc2fb.js');
require('../config-provider/hooks/useConfig.js');
require('../_chunks/dep-93f95d13.js');
require('../_chunks/dep-ff8fcf16.js');
require('dayjs');
require('../_chunks/dep-b639c1c1.js');
require('../_chunks/dep-2c7d4d23.js');
require('../_chunks/dep-585a9bde.js');
require('../_chunks/dep-def51c16.js');
require('../_chunks/dep-70a764ff.js');
require('../_chunks/dep-30330e5f.js');
require('../_chunks/dep-107cac75.js');
require('../_chunks/dep-8a1d4392.js');
require('../_chunks/dep-d51393ab.js');
require('../_chunks/dep-08f1a433.js');
require('../_chunks/dep-2a053834.js');
require('@babel/runtime/helpers/slicedToArray');
require('../_chunks/dep-3e114850.js');
require('../_chunks/dep-bf8b0575.js');
require('../_chunks/dep-b2793617.js');
require('../_chunks/dep-470fd721.js');
require('../_chunks/dep-786ccd48.js');
require('../_chunks/dep-a4a942c3.js');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/helpers/classCallCheck');
require('./props.js');
require('./utils/animate.js');
require('./consts/index.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var seed = 0;
var instanceMap = /* @__PURE__ */new Map();
var NotificationFunction = function NotificationFunction(options, context) {
  seed += 1;
  var hackOptions = _objectSpread({
    placement: "top-right",
    zIndex: 6e3,
    attach: "body",
    id: seed
  }, options);
  hackOptions.content = options.content ? options.content : "";
  var attachEl = dom.getAttach(hackOptions.attach);
  if (!instanceMap.get(attachEl)) {
    instanceMap.set(attachEl, {});
  }
  var tmpInstance = instanceMap.get(attachEl)[hackOptions.placement];
  if (!tmpInstance) {
    var wrapper = document.createElement("div");
    var instance = Vue.createVNode(notification_notificationList["default"], {
      placement: hackOptions.placement
    });
    if (context !== null && context !== void 0 ? context : NotificationPlugin._context) {
      instance.appContext = context !== null && context !== void 0 ? context : NotificationPlugin._context;
    }
    attachEl.appendChild(wrapper);
    Vue.render(instance, wrapper);
    instance.component.exposed.add(hackOptions);
    instanceMap.get(attachEl)[hackOptions.placement] = instance;
    tmpInstance = instance;
  } else {
    tmpInstance.component.exposed.add(hackOptions);
  }
  return new Promise(function (resolve) {
    var ins = instanceMap.get(attachEl)[hackOptions.placement];
    Vue.nextTick(function () {
      var _ins$component$expose;
      var notificationList = (_ins$component$expose = ins.component.exposed.notificationList.value) !== null && _ins$component$expose !== void 0 ? _ins$component$expose : [];
      resolve(notificationList === null || notificationList === void 0 ? void 0 : notificationList.find(function (notify) {
        var _notify$$;
        return ((_notify$$ = notify.$) === null || _notify$$ === void 0 || (_notify$$ = _notify$$.vnode) === null || _notify$$ === void 0 ? void 0 : _notify$$.key) === hackOptions.id;
      }));
    });
  });
};
var showThemeNotification = function showThemeNotification(theme, options, context) {
  var hackOptions = _objectSpread(_objectSpread({}, options), {}, {
    theme: theme
  });
  return NotificationFunction(hackOptions, context);
};
var extraApi = {
  info: function info(options, context) {
    return showThemeNotification("info", options, context);
  },
  success: function success(options, context) {
    return showThemeNotification("success", options, context);
  },
  warning: function warning(options, context) {
    return showThemeNotification("warning", options, context);
  },
  error: function error(options, context) {
    return showThemeNotification("error", options, context);
  },
  close: function close(promise) {
    promise.then(function (instance) {
      return instance.close();
    });
  },
  closeAll: function closeAll() {
    instanceMap.forEach(function (attach) {
      Object.keys(attach).forEach(function (placement) {
        attach[placement].component.exposed.removeAll();
      });
    });
  }
};
var NotificationPlugin = showThemeNotification;
NotificationPlugin.install = function (app) {
  app.config.globalProperties.$notify = showThemeNotification;
  Object.keys(extraApi).forEach(function (funcName) {
    app.config.globalProperties.$notify[funcName] = extraApi[funcName];
  });
  NotificationPlugin._context = app._context;
};
Object.keys(extraApi).forEach(function (funcName) {
  NotificationPlugin[funcName] = extraApi[funcName];
});
var NotifyPlugin = NotificationPlugin;

exports.NotifyPlugin = NotifyPlugin;
exports["default"] = NotificationPlugin;
//# sourceMappingURL=plugin.js.map
