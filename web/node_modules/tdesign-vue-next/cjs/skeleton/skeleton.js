/**
 * tdesign v1.15.5
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var skeleton_props = require('./props.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-0735d63b.js');
var index$1 = require('../_chunks/dep-01130408.js');
var index = require('../_chunks/dep-63bfc2fb.js');
require('@babel/runtime/helpers/slicedToArray');
require('../_chunks/dep-a4a942c3.js');
var isArray = require('../_chunks/dep-bc6186ff.js');
var isNumber = require('../_chunks/dep-6281e9d2.js');
var isFunction = require('../_chunks/dep-fca60f44.js');
require('../_chunks/dep-91320004.js');
require('../_chunks/dep-a540990f.js');
require('../_chunks/dep-d108653b.js');
require('../_chunks/dep-4086f164.js');
require('../_chunks/dep-b3f3f98b.js');
require('../_chunks/dep-0d2b5e58.js');
require('../_chunks/dep-eb7d956f.js');
require('../_chunks/dep-6b73e8fe.js');
require('../_chunks/dep-1590b32e.js');
require('../_chunks/dep-f8c2f074.js');
require('../_chunks/dep-42015aef.js');
require('../_chunks/dep-d04d0634.js');
require('../_chunks/dep-d05f7718.js');
require('../_chunks/dep-b1b934d4.js');
require('../config-provider/hooks/useConfig.js');
require('../_chunks/dep-93f95d13.js');
require('../_chunks/dep-ff8fcf16.js');
require('dayjs');
require('../_chunks/dep-b639c1c1.js');
require('../_chunks/dep-2c7d4d23.js');
require('../_chunks/dep-585a9bde.js');
require('../_chunks/dep-def51c16.js');
require('../_chunks/dep-70a764ff.js');
require('../_chunks/dep-30330e5f.js');
require('../_chunks/dep-107cac75.js');
require('../_chunks/dep-8a1d4392.js');
require('../_chunks/dep-d51393ab.js');
require('../_chunks/dep-08f1a433.js');
require('../_chunks/dep-2a053834.js');
require('../_chunks/dep-3e114850.js');
require('../_chunks/dep-bf8b0575.js');
require('../_chunks/dep-b2793617.js');
require('../_chunks/dep-470fd721.js');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/helpers/classCallCheck');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

var ThemeMap = {
  text: [1],
  avatar: [{
    type: "circle",
    size: "56px"
  }],
  paragraph: [1, 1, {
    width: "70%"
  }],
  "avatar-text": [[{
    type: "circle"
  }, {
    type: "text",
    height: "32px"
  }]],
  tab: [{
    height: "30px"
  }, {
    height: "200px"
  }],
  article: [{
    type: "rect",
    height: "30px",
    width: "100%"
  }, {
    type: "rect",
    height: "200px",
    width: "100%"
  }, [{
    type: "text",
    height: "30px"
  }, {
    type: "text",
    height: "30px"
  }, {
    type: "text",
    height: "30px"
  }], [{
    type: "text",
    height: "30px"
  }, {
    type: "text",
    height: "30px"
  }], [{
    type: "text",
    height: "30px"
  }, {
    type: "text",
    height: "30px"
  }], [{
    type: "text",
    height: "30px"
  }, {
    type: "text",
    height: "30px"
  }]]
};
var getColItemStyle = function getColItemStyle(obj) {
  var styleName = ["width", "height", "marginRight", "marginLeft", "margin", "size", "background", "backgroundColor"];
  var style = /* @__PURE__ */Object.create(null);
  styleName.forEach(function (name) {
    if (name in obj) {
      var val = obj[name];
      var px = isNumber.isNumber(val) ? "".concat(val, "px") : val;
      if (name === "size") {
        var _ref = [px, px];
        style.width = _ref[0];
        style.height = _ref[1];
      } else {
        style[name] = px;
      }
    }
  });
  return style;
};
var _Skeleton = Vue.defineComponent({
  name: "TSkeleton",
  props: skeleton_props["default"],
  setup: function setup(props2, _ref2) {
    var slots = _ref2.slots;
    var isShow = Vue.ref(false);
    var COMPONENT_NAME = index.usePrefixClass("skeleton");
    var renderContent = index$1.useContent();
    var getColItemClass = function getColItemClass(obj) {
      return ["".concat(COMPONENT_NAME.value, "__col"), "".concat(COMPONENT_NAME.value, "--type-").concat(obj.type || "text"), _defineProperty__default["default"]({}, "".concat(COMPONENT_NAME.value, "--animation-").concat(props2.animation), props2.animation)];
    };
    var renderCols = function renderCols(_cols) {
      var cols = [];
      if (isArray.isArray(_cols)) {
        cols = _cols;
      } else if (isNumber.isNumber(_cols)) {
        cols = new Array(_cols).fill({
          type: "text"
        });
      } else {
        cols = [_cols];
      }
      return cols.map(function (obj) {
        return Vue.createVNode("div", {
          "class": getColItemClass(obj),
          "style": getColItemStyle(obj)
        }, [isFunction.isFunction(obj.content) ? obj.content(Vue.h) : obj.content]);
      });
    };
    var renderRowCol = function renderRowCol(_rowCol) {
      var rowCol = _rowCol || props2.rowCol;
      var getBlockClass = function getBlockClass() {
        return ["".concat(COMPONENT_NAME.value, "__row")];
      };
      return rowCol.map(function (item) {
        return Vue.createVNode("div", {
          "class": getBlockClass()
        }, [renderCols(item)]);
      });
    };
    var timer = null;
    Vue.watch(function () {
      return props2.loading;
    }, function (bool) {
      if (!bool) {
        clearTimeout(timer);
        isShow.value = false;
        return;
      }
      if (props2.delay > 0) {
        timer = setTimeout(function () {
          clearTimeout(timer);
          isShow.value = true;
        }, props2.delay);
      } else {
        isShow.value = true;
      }
    }, {
      immediate: true
    });
    return function () {
      var content = renderContent("default", "content");
      if (slots["default"] && !isShow.value) {
        return Vue.createVNode("div", null, [content]);
      }
      if (!isShow.value) {
        return;
      }
      var children = [];
      if (props2.theme) {
        children.push(renderRowCol(ThemeMap[props2.theme]));
      }
      if (props2.rowCol) {
        children.push(renderRowCol(props2.rowCol));
      }
      if (!props2.theme && !props2.rowCol) {
        children.push(renderRowCol([1, 1, 1, {
          width: "70%"
        }]));
      }
      return Vue.createVNode("div", {
        "class": COMPONENT_NAME.value
      }, [children]);
    };
  }
});

exports["default"] = _Skeleton;
//# sourceMappingURL=skeleton.js.map
