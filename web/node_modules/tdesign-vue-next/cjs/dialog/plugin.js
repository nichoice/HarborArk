/**
 * tdesign v1.15.5
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var dialog_dialog = require('./dialog.js');
var dom = require('../_chunks/dep-a540990f.js');
var omit = require('../_chunks/dep-b0d4d0b9.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('./props.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-0735d63b.js');
require('../_chunks/dep-91320004.js');
require('../_chunks/dep-63bfc2fb.js');
require('../config-provider/hooks/useConfig.js');
require('../_chunks/dep-93f95d13.js');
require('../_chunks/dep-ff8fcf16.js');
require('dayjs');
require('../_chunks/dep-b639c1c1.js');
require('../_chunks/dep-2c7d4d23.js');
require('../_chunks/dep-585a9bde.js');
require('../_chunks/dep-fca60f44.js');
require('../_chunks/dep-4086f164.js');
require('../_chunks/dep-eb7d956f.js');
require('../_chunks/dep-def51c16.js');
require('../_chunks/dep-70a764ff.js');
require('../_chunks/dep-b3f3f98b.js');
require('../_chunks/dep-bc6186ff.js');
require('../_chunks/dep-30330e5f.js');
require('../_chunks/dep-107cac75.js');
require('../_chunks/dep-8a1d4392.js');
require('../_chunks/dep-d51393ab.js');
require('../_chunks/dep-08f1a433.js');
require('../_chunks/dep-2a053834.js');
require('@babel/runtime/helpers/slicedToArray');
require('../_chunks/dep-d108653b.js');
require('../_chunks/dep-3e114850.js');
require('../_chunks/dep-bf8b0575.js');
require('../_chunks/dep-b2793617.js');
require('../_chunks/dep-470fd721.js');
require('../_chunks/dep-bee538f7.js');
require('../_chunks/dep-a4a942c3.js');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/helpers/classCallCheck');
require('../_chunks/dep-c4d37559.js');
require('../loading/icon/gradient.js');
require('../_chunks/dep-b70f9cd8.js');
require('../_chunks/dep-8828ecbe.js');
require('../_chunks/dep-768729ab.js');
require('../_chunks/dep-694e599d.js');
require('../_chunks/dep-6281e9d2.js');
require('../_chunks/dep-01130408.js');
require('../_chunks/dep-0d2b5e58.js');
require('../_chunks/dep-6b73e8fe.js');
require('../_chunks/dep-1590b32e.js');
require('../_chunks/dep-f8c2f074.js');
require('../_chunks/dep-42015aef.js');
require('../_chunks/dep-d04d0634.js');
require('../_chunks/dep-d05f7718.js');
require('../_chunks/dep-b1b934d4.js');
require('../_chunks/dep-7828ec02.js');
require('../loading/props.js');
require('../button/index.js');
require('../button/button.js');
require('../loading/index.js');
require('../_chunks/dep-9976ba3b.js');
require('../loading/plugin.js');
require('../_chunks/dep-0c1f614d.js');
require('../_chunks/dep-93db0d6c.js');
require('../_chunks/dep-4a361d8b.js');
require('../_chunks/dep-391a0ac9.js');
require('../_chunks/dep-21d5620a.js');
require('../_chunks/dep-9d937c62.js');
require('../_chunks/dep-c24fecfd.js');
require('../_chunks/dep-f3e23bf4.js');
require('../_chunks/dep-8ef89d8d.js');
require('../_chunks/dep-2437d716.js');
require('../button/props.js');
require('../_chunks/dep-b1cffc1c.js');
require('../_chunks/dep-0cf0bc29.js');
require('../_chunks/dep-65d546eb.js');
require('./hooks/useSameTarget.js');
require('../_chunks/dep-68f57f50.js');
require('./utils/index.js');
require('./dialog-card.js');
require('tdesign-icons-vue-next');
require('./dialog-card-props.js');
require('../_chunks/dep-786ccd48.js');
require('./hooks/useAction.js');
require('../_chunks/dep-de8fe3e3.js');
require('../_chunks/dep-86c7017f.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var createDialog = function createDialog(props, context) {
  var options = _objectSpread({}, props);
  var wrapper = document.createElement("div");
  var visible = Vue.ref(false);
  var className = options.className,
    style = options.style;
  var preClassName = className;
  var updateClassNameStyle = function updateClassNameStyle(className2, style2) {
    if (className2) {
      if (preClassName && preClassName !== className2) {
        var _wrapper$firstElement;
        (_wrapper$firstElement = wrapper.firstElementChild.classList).remove.apply(_wrapper$firstElement, _toConsumableArray__default["default"](preClassName.split(" ").map(function (name) {
          return name.trim();
        })));
      }
      className2.split(" ").forEach(function (name) {
        wrapper.firstElementChild.classList.add(name.trim());
      });
    }
    if (style2) {
      wrapper.firstElementChild.style.cssText += style2;
    }
    preClassName = className2;
  };
  function destroySelf() {
    Vue.render(null, wrapper);
    wrapper.remove();
  }
  var component = Vue.defineComponent({
    setup: function setup(props2, _ref) {
      var expose = _ref.expose;
      var dialogOptions = Vue.ref(options);
      Vue.onMounted(function () {
        visible.value = true;
        document.activeElement.blur();
        Vue.nextTick(function () {
          updateClassNameStyle(className, style);
        });
      });
      var update = function update(newOptions) {
        dialogOptions.value = _objectSpread(_objectSpread({}, options), newOptions);
      };
      expose({
        update: update
      });
      return function () {
        var onClose = options.onClose || function () {
          visible.value = false;
          if (options.destroyOnClose) {
            setTimeout(function () {
              destroySelf();
            }, 300);
          }
        };
        delete options.className;
        delete options.style;
        return Vue.h(dialog_dialog["default"], _objectSpread({
          onClose: onClose,
          visible: visible.value
        }, dialogOptions.value));
      };
    }
  });
  var dialog = Vue.createVNode(component);
  if (context !== null && context !== void 0 ? context : DialogPlugin._context) {
    dialog.appContext = context !== null && context !== void 0 ? context : DialogPlugin._context;
  }
  var container = dom.getAttach(options.attach);
  if (container) {
    container.appendChild(wrapper);
  } else {
    console.error("attach is not exist");
  }
  Vue.render(dialog, wrapper);
  var dialogNode = {
    show: function show() {
      visible.value = true;
    },
    hide: function hide() {
      visible.value = false;
    },
    update: function update(newOptions) {
      dialog.component.exposed.update(omit.omit(newOptions, ["className", "style"]));
      updateClassNameStyle(newOptions.className, newOptions.style);
    },
    destroy: function destroy() {
      visible.value = false;
      setTimeout(function () {
        destroySelf();
      }, 300);
    },
    setConfirmLoading: function setConfirmLoading(val) {
      dialog.component.exposed.update({
        confirmLoading: val
      });
    }
  };
  return dialogNode;
};
var confirm = function confirm(props, context) {
  return createDialog(props, context);
};
var alert = function alert(props, context) {
  var options = _objectSpread({}, props);
  options.cancelBtn = null;
  return createDialog(options, context);
};
var extraApi = {
  confirm: confirm,
  alert: alert
};
var DialogPlugin = createDialog;
DialogPlugin.install = function (app) {
  app.config.globalProperties.$dialog = createDialog;
  DialogPlugin._context = app._context;
  Object.keys(extraApi).forEach(function (funcName) {
    app.config.globalProperties.$dialog[funcName] = extraApi[funcName];
  });
};
Object.keys(extraApi).forEach(function (funcName) {
  DialogPlugin[funcName] = extraApi[funcName];
});

exports.DialogPlugin = DialogPlugin;
exports["default"] = DialogPlugin;
//# sourceMappingURL=plugin.js.map
