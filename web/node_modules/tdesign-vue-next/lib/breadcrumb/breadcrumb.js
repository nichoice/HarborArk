/**
 * tdesign v1.15.5
 * (c) 2025 tdesign
 * @license MIT
 */

import { defineComponent, toRefs, createVNode, provide, reactive, mergeProps } from 'vue';
import _typeof from '@babel/runtime/helpers/typeof';
import props from './props.js';
import _BreadcrumbItem from './breadcrumb-item.js';
import 'lodash-es';
import '@babel/runtime/helpers/toConsumableArray';
import '../_chunks/dep-f63d87ab.js';
import { u as useTNodeJSX } from '../_chunks/dep-33b31db2.js';
import { u as usePrefixClass } from '../_chunks/dep-e5485747.js';
import { u as useGlobalIcon } from '../_chunks/dep-877740d0.js';
import '@babel/runtime/helpers/slicedToArray';
import '../_chunks/dep-4e1ab078.js';
import '@babel/runtime/helpers/defineProperty';
import { useEllipsis } from './hooks/useEllipsis.js';
import { useBreadcrumbOptions } from './hooks/useBreadcrumbOptions.js';
import { ChevronRightIcon, EllipsisIcon } from 'tdesign-icons-vue-next';
import './breadcrumb-item-props.js';
import '../tooltip/index.js';
import '../tooltip/tooltip.js';
import '../tooltip/props.js';
import '../popup/props.js';
import '../popup/index.js';
import '../popup/popup.js';
import '@popperjs/core';
import '../_chunks/dep-ad04adab.js';
import '../_chunks/dep-a40df139.js';
import '../config-provider/hooks/useConfig.js';
import '../config-provider/utils/context.js';
import '../_chunks/dep-c763ae78.js';
import '../_chunks/dep-35f1094d.js';
import 'dayjs';
import '../_chunks/dep-fb982f56.js';
import '../_chunks/dep-0d4d868d.js';
import '../popup/container.js';
import '../_chunks/dep-2d3bbad1.js';
import '../_chunks/dep-6a57b90d.js';
import '../_chunks/dep-ab05c766.js';
import '@babel/runtime/helpers/createClass';
import '@babel/runtime/helpers/classCallCheck';
import '../tooltip/utils/index.js';
import '../_chunks/dep-b3eca3c5.js';
import '../_chunks/dep-5b84b8e7.js';

var _Breadcrumb = defineComponent({
  name: "TBreadcrumb",
  props: props,
  setup: function setup(props2) {
    var _toRefs = toRefs(props2),
      theme = _toRefs.theme,
      maxItemWidth = _toRefs.maxItemWidth;
    var COMPONENT_NAME = usePrefixClass("breadcrumb");
    var renderTNodeJSX = useTNodeJSX();
    var _useGlobalIcon = useGlobalIcon({
        ChevronRightIcon: ChevronRightIcon,
        EllipsisIcon: EllipsisIcon
      }),
      ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon,
      EllipsisIcon$1 = _useGlobalIcon.EllipsisIcon;
    var separatorContent = renderTNodeJSX("separator");
    var separator = separatorContent || createVNode(ChevronRightIcon$1, null, null);
    provide("tBreadcrumb", reactive({
      separator: separator,
      theme: theme,
      maxItemWidth: maxItemWidth
    }));
    return function () {
      var _useBreadcrumbOptions = useBreadcrumbOptions(props2),
        breadcrumbOptions = _useBreadcrumbOptions.breadcrumbOptions;
      var ellipsisItems = breadcrumbOptions.value.slice(props2.itemsBeforeCollapse, breadcrumbOptions.value.length - props2.itemsAfterCollapse);
      var ellipsisSlot = renderTNodeJSX("ellipsis", {
        params: {
          items: ellipsisItems,
          separator: separator
        }
      });
      var ellipsisContent = ellipsisSlot || createVNode(EllipsisIcon$1, null, null);
      var _useEllipsis = useEllipsis(props2, breadcrumbOptions, ellipsisContent),
        getDisplayItems = _useEllipsis.getDisplayItems;
      var items = getDisplayItems.value;
      var content = items.map(function (item, index) {
        if (_typeof(item) === "object" && "content" in item) {
          return createVNode(_BreadcrumbItem, mergeProps({
            "key": index
          }, item), {
            "default": function _default() {
              return [item.content];
            }
          });
        }
        return item;
      });
      return createVNode("div", {
        "class": COMPONENT_NAME.value
      }, [content]);
    };
  }
});

export { _Breadcrumb as default };
//# sourceMappingURL=breadcrumb.js.map
