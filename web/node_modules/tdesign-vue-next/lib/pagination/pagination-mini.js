/**
 * tdesign v1.15.5
 * (c) 2025 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, computed, createVNode, isVNode } from 'vue';
import { isObject } from 'lodash-es';
import { ChevronLeftIcon, RoundIcon, ChevronRightIcon, ChevronUpIcon, ChevronDownIcon } from 'tdesign-icons-vue-next';
import props from './pagination-mini-props.js';
import '@babel/runtime/helpers/toConsumableArray';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-f63d87ab.js';
import { u as usePrefixClass } from '../_chunks/dep-e5485747.js';
import { u as useGlobalIcon } from '../_chunks/dep-877740d0.js';
import '@babel/runtime/helpers/slicedToArray';
import '../_chunks/dep-4e1ab078.js';
import { Button } from '../button/index.js';
import { Tooltip } from '../tooltip/index.js';
import '../_chunks/dep-35f1094d.js';
import '../config-provider/hooks/useConfig.js';
import '../config-provider/utils/context.js';
import '../_chunks/dep-c763ae78.js';
import 'dayjs';
import '@babel/runtime/helpers/createClass';
import '@babel/runtime/helpers/classCallCheck';
import '../button/button.js';
import '../loading/index.js';
import '../loading/directive.js';
import '../loading/plugin.js';
import '../_chunks/dep-74a8441f.js';
import '../loading/icon/gradient.js';
import '../_chunks/dep-fb982f56.js';
import '../_chunks/dep-46618c3a.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '../_chunks/dep-ad04adab.js';
import '../_chunks/dep-33b31db2.js';
import '../_chunks/dep-ab05c766.js';
import '../_chunks/dep-a40df139.js';
import '../loading/props.js';
import '../_chunks/dep-6a57b90d.js';
import '../button/props.js';
import '../_chunks/dep-a45ebbd0.js';
import '../_chunks/dep-82148777.js';
import '../tooltip/tooltip.js';
import '../tooltip/props.js';
import '../popup/props.js';
import '../popup/index.js';
import '../popup/popup.js';
import '@popperjs/core';
import '../_chunks/dep-0d4d868d.js';
import '../popup/container.js';
import '../_chunks/dep-2d3bbad1.js';
import '../tooltip/utils/index.js';

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}
var _PaginationMini = defineComponent({
  name: "TPaginationMini",
  props: props,
  setup: function setup(props2) {
    var COMPONENT_NAME = usePrefixClass("pagination-mini");
    var _useGlobalIcon = useGlobalIcon({
        ChevronLeftIcon: ChevronLeftIcon,
        RoundIcon: RoundIcon,
        ChevronRightIcon: ChevronRightIcon,
        ChevronUpIcon: ChevronUpIcon,
        ChevronDownIcon: ChevronDownIcon
      }),
      ChevronLeftIcon$1 = _useGlobalIcon.ChevronLeftIcon,
      RoundIcon$1 = _useGlobalIcon.RoundIcon,
      ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon,
      ChevronUpIcon$1 = _useGlobalIcon.ChevronUpIcon,
      ChevronDownIcon$1 = _useGlobalIcon.ChevronDownIcon;
    var titleConfig = computed(function () {
      if (isObject(props2.tips)) return props2.tips;
      if (props2.tips === true) return {
        prev: "\u4E0A\u4E00\u9875",
        current: "\u5F53\u524D",
        next: "\u4E0B\u4E00\u9875"
      };
      return {};
    });
    var disabledConfig = computed(function () {
      if (isObject(props2.disabled)) return props2.disabled;
      if (props2.disabled === true) return {
        prev: true,
        current: true,
        next: true
      };
      return {
        prev: false,
        current: false,
        next: false
      };
    });
    var renderWithTooltip = function renderWithTooltip(content, node) {
      if (!content) return node;
      return createVNode(Tooltip, {
        "content": content,
        "showArrow": false
      }, _isSlot(node) ? node : {
        "default": function _default() {
          return [node];
        }
      });
    };
    return function () {
      var jumperClass = [COMPONENT_NAME.value, _defineProperty({}, "".concat(COMPONENT_NAME.value, "--outline"), props2.variant === "outline")];
      return createVNode("div", {
        "class": jumperClass
      }, [renderWithTooltip(titleConfig.value.prev, createVNode(Button, {
        "variant": props2.variant,
        "size": props2.size,
        "shape": "square",
        "onClick": function onClick(e) {
          var _props2$onChange;
          return (_props2$onChange = props2.onChange) === null || _props2$onChange === void 0 ? void 0 : _props2$onChange.call(props2, {
            e: e,
            trigger: "prev"
          });
        },
        "icon": props2.layout === "horizontal" ? function () {
          return createVNode(ChevronLeftIcon$1, null, null);
        } : function () {
          return createVNode(ChevronUpIcon$1, null, null);
        },
        "class": "".concat(COMPONENT_NAME.value, "__prev"),
        "disabled": disabledConfig.value.prev
      }, null)), props2.showCurrent && renderWithTooltip(titleConfig.value.current, createVNode(Button, {
        "variant": props2.variant,
        "size": props2.size,
        "shape": "square",
        "onClick": function onClick(e) {
          var _props2$onChange2;
          return (_props2$onChange2 = props2.onChange) === null || _props2$onChange2 === void 0 ? void 0 : _props2$onChange2.call(props2, {
            e: e,
            trigger: "current"
          });
        },
        "icon": function icon() {
          return createVNode(RoundIcon$1, null, null);
        },
        "class": "".concat(COMPONENT_NAME.value, "__current"),
        "disabled": disabledConfig.value.current
      }, null)), renderWithTooltip(titleConfig.value.next, createVNode(Button, {
        "variant": props2.variant,
        "size": props2.size,
        "shape": "square",
        "onClick": function onClick(e) {
          var _props2$onChange3;
          return (_props2$onChange3 = props2.onChange) === null || _props2$onChange3 === void 0 ? void 0 : _props2$onChange3.call(props2, {
            e: e,
            trigger: "next"
          });
        },
        "icon": props2.layout === "horizontal" ? function () {
          return createVNode(ChevronRightIcon$1, null, null);
        } : function () {
          return createVNode(ChevronDownIcon$1, null, null);
        },
        "class": "".concat(COMPONENT_NAME.value, "__next"),
        "disabled": disabledConfig.value.next
      }, null))]);
    };
  }
});

export { _PaginationMini as default };
//# sourceMappingURL=pagination-mini.js.map
