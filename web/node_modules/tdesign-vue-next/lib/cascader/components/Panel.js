/**
 * tdesign v1.15.5
 * (c) 2025 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, computed, createVNode, h } from 'vue';
import Item from './Item.js';
import props from '../props.js';
import 'lodash-es';
import '@babel/runtime/helpers/toConsumableArray';
import '@babel/runtime/helpers/typeof';
import '../../_chunks/dep-f63d87ab.js';
import { b as getDefaultNode } from '../../_chunks/dep-ab05c766.js';
import { b as useTNodeDefault } from '../../_chunks/dep-33b31db2.js';
import { u as usePrefixClass } from '../../_chunks/dep-e5485747.js';
import '@babel/runtime/helpers/slicedToArray';
import '../../_chunks/dep-4e1ab078.js';
import { valueChangeEffect, expendClickEffect } from '../utils/effect.js';
import { getPanels } from '../utils/helper.js';
import { useConfig } from '../../config-provider/hooks/useConfig.js';
import 'tdesign-icons-vue-next';
import '../utils/className.js';
import '../../checkbox/index.js';
import '../../checkbox/checkbox.js';
import '../../checkbox/props.js';
import '../../_chunks/dep-a40df139.js';
import '../../_chunks/dep-a45ebbd0.js';
import '../../_chunks/dep-503959a8.js';
import '../../_chunks/dep-82148777.js';
import '../../_chunks/dep-fb982f56.js';
import '../../_chunks/dep-0d4d868d.js';
import '../../checkbox/consts/index.js';
import '../../checkbox/hooks/useCheckboxLazyLoad.js';
import '../../_chunks/dep-f41deeb5.js';
import '../../checkbox/hooks/useKeyboardEvent.js';
import '../../_chunks/dep-45c3353c.js';
import '../../_chunks/dep-35f1094d.js';
import '../../_chunks/dep-ad04adab.js';
import '../../config-provider/utils/context.js';
import '../../_chunks/dep-c763ae78.js';
import 'dayjs';
import '@babel/runtime/helpers/createClass';
import '@babel/runtime/helpers/classCallCheck';
import '../../checkbox/group.js';
import '../../checkbox/checkbox-group-props.js';
import '../../_chunks/dep-5b84b8e7.js';
import '../../_chunks/dep-6a57b90d.js';
import '../../loading/index.js';
import '../../loading/directive.js';
import '../../loading/plugin.js';
import '../../_chunks/dep-74a8441f.js';
import '../../loading/icon/gradient.js';
import '../../_chunks/dep-46618c3a.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '../../loading/props.js';
import '../../_chunks/dep-877740d0.js';

var Panel = defineComponent({
  name: "TCascaderSubPanel",
  props: {
    option: props.option,
    empty: props.empty,
    trigger: props.trigger,
    onChange: props.onChange,
    loading: props.loading,
    loadingText: props.loadingText,
    cascaderContext: {
      type: Object
    }
  },
  setup: function setup(props) {
    var renderTNodeJSXDefault = useTNodeDefault();
    var COMPONENT_NAME = usePrefixClass("cascader");
    var _useConfig = useConfig("cascader"),
      globalConfig = _useConfig.globalConfig;
    var panels = computed(function () {
      return getPanels(props.cascaderContext.treeNodes);
    });
    var handleExpand = function handleExpand(node, trigger) {
      var propsTrigger = props.trigger,
        cascaderContext = props.cascaderContext;
      expendClickEffect(propsTrigger, trigger, node, cascaderContext);
    };
    var renderItem = function renderItem(node, index) {
      var optionChild = node.data.content ? getDefaultNode(node.data.content(h)) : renderTNodeJSXDefault("option", {
        params: {
          item: node.data,
          index: index
        }
      });
      return createVNode(Item, {
        "key": node.value,
        "node": node,
        "optionChild": optionChild,
        "cascaderContext": props.cascaderContext,
        "onClick": function onClick() {
          handleExpand(node, "click");
        },
        "onMouseenter": function onMouseenter() {
          handleExpand(node, "hover");
        },
        "onChange": function onChange() {
          valueChangeEffect(node, props.cascaderContext);
        }
      }, null);
    };
    var renderList = function renderList(treeNodes) {
      var isFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var segment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
      return createVNode("ul", {
        "class": ["".concat(COMPONENT_NAME.value, "__menu"), "narrow-scrollbar", _defineProperty(_defineProperty({}, "".concat(COMPONENT_NAME.value, "__menu--segment"), segment), "".concat(COMPONENT_NAME.value, "__menu--filter"), isFilter)],
        "key": "".concat(COMPONENT_NAME, "__menu").concat(index)
      }, [treeNodes.map(function (node) {
        return renderItem(node, index);
      })]);
    };
    var renderPanels = function renderPanels() {
      var _props$cascaderContex = props.cascaderContext,
        inputVal = _props$cascaderContex.inputVal,
        treeNodes = _props$cascaderContex.treeNodes;
      return inputVal ? renderList(treeNodes, true) : panels.value.map(function (treeNodes2, index) {
        return renderList(treeNodes2, false, index !== panels.value.length - 1, index);
      });
    };
    return function () {
      var content;
      if (props.loading) {
        content = renderTNodeJSXDefault("loadingText", createVNode("div", {
          "class": "".concat(COMPONENT_NAME.value, "__panel--empty")
        }, [globalConfig.value.loadingText]));
      } else {
        content = panels.value.length ? renderPanels() : renderTNodeJSXDefault("empty", createVNode("div", {
          "class": "".concat(COMPONENT_NAME.value, "__panel--empty")
        }, [globalConfig.value.empty]));
      }
      return createVNode("div", {
        "class": ["".concat(COMPONENT_NAME.value, "__panel"), _defineProperty({}, "".concat(COMPONENT_NAME.value, "--normal"), panels.value.length && !props.loading)]
      }, [content]);
    };
  }
});

export { Panel as default };
//# sourceMappingURL=Panel.js.map
