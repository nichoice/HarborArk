definitions:
  controller.CreateUserGroupRequest:
    properties:
      description:
        example: 系统管理员组
        type: string
      level:
        example: 1
        type: integer
      name:
        example: 管理员
        type: string
    required:
    - level
    - name
    type: object
  controller.CreateUserRequest:
    properties:
      group_id:
        example: 1
        type: integer
      password:
        example: "123456"
        type: string
      username:
        example: admin
        type: string
    required:
    - group_id
    - password
    - username
    type: object
  controller.LoginRequest:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  controller.LoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/model.User'
    type: object
  controller.PageResponse:
    properties:
      list: {}
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
    type: object
  controller.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  controller.UpdateUserGroupRequest:
    properties:
      description:
        example: 新的描述
        type: string
      level:
        example: 2
        type: integer
      name:
        example: 新管理员
        type: string
    type: object
  controller.UpdateUserRequest:
    properties:
      group_id:
        example: 2
        type: integer
      is_enabled:
        example: true
        type: boolean
      password:
        example: newpassword
        type: string
    type: object
  controller.deleteReq:
    properties:
      path:
        type: string
    required:
    - path
    type: object
  controller.exportAuditReq:
    properties:
      from:
        description: RFC3339
        type: string
      to:
        description: RFC3339
        type: string
    required:
    - from
    - to
    type: object
  controller.listResponse:
    properties:
      has_more:
        type: boolean
      limit:
        type: integer
      list:
        items:
          $ref: '#/definitions/service.FileItem'
        type: array
      next_offset:
        type: integer
      offset:
        type: integer
    type: object
  controller.mkdirReq:
    properties:
      name:
        description: 新目录名
        type: string
      path:
        description: 父目录
        type: string
    required:
    - name
    - path
    type: object
  controller.renameReq:
    properties:
      new_path:
        type: string
      old_path:
        type: string
    required:
    - new_path
    - old_path
    type: object
  controller.updateMetaReq:
    properties:
      meta:
        $ref: '#/definitions/service.FileMetadata'
      path:
        type: string
    required:
    - meta
    - path
    type: object
  model.User:
    properties:
      created_at:
        type: string
      group:
        $ref: '#/definitions/model.UserGroup'
      group_id:
        type: integer
      id:
        type: integer
      is_enabled:
        type: boolean
      last_login_at:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  model.UserGroup:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      level:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      users:
        items:
          $ref: '#/definitions/model.User'
        type: array
    type: object
  service.FileItem:
    properties:
      is_dir:
        type: boolean
      meta:
        $ref: '#/definitions/service.FileMetadata'
      mod_time:
        description: ms
        type: integer
      mode:
        type: integer
      name:
        type: string
      path:
        type: string
      size:
        type: integer
    type: object
  service.FileMetadata:
    properties:
      created_at:
        description: ms
        type: integer
      created_by:
        type: integer
      created_by_name:
        type: string
      custom:
        additionalProperties:
          type: string
        type: object
      notes:
        type: string
      tags:
        items:
          type: string
        type: array
      updated_at:
        description: ms
        type: integer
      updated_by:
        type: integer
      updated_by_name:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: 用户登录获取JWT token
      parameters:
      - description: 登录信息
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/controller.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.Response'
            - properties:
                data:
                  $ref: '#/definitions/controller.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 用户登录
      tags:
      - 认证
  /fs/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 参数
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.deleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 删除文件或目录
      tags:
      - 文件管理
  /fs/export-audit:
    post:
      consumes:
      - application/json
      parameters:
      - description: 时间范围
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.exportAuditReq'
      produces:
      - application/json
      responses:
        "200":
          description: zip 文件路径
          schema:
            allOf:
            - $ref: '#/definitions/controller.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 导出审计日志（Zip）
      tags:
      - 文件管理
  /fs/list:
    get:
      parameters:
      - description: 目录路径
        in: query
        name: path
        required: true
        type: string
      - default: 0
        description: 偏移
        in: query
        name: offset
        type: integer
      - default: 50
        description: 数量
        in: query
        name: limit
        type: integer
      - default: false
        description: 是否包含隐藏文件
        in: query
        name: hidden
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.Response'
            - properties:
                data:
                  $ref: '#/definitions/controller.listResponse'
              type: object
      security:
      - BearerAuth: []
      summary: 列出目录
      tags:
      - 文件管理
  /fs/metadata:
    get:
      parameters:
      - description: 路径
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.FileMetadata'
              type: object
      security:
      - BearerAuth: []
      summary: 获取元数据
      tags:
      - 文件管理
    put:
      consumes:
      - application/json
      parameters:
      - description: 参数
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.updateMetaReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 更新元数据
      tags:
      - 文件管理
  /fs/mkdir:
    post:
      consumes:
      - application/json
      parameters:
      - description: 参数
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.mkdirReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 创建目录
      tags:
      - 文件管理
  /fs/rename:
    post:
      consumes:
      - application/json
      parameters:
      - description: 参数
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.renameReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 重命名或移动
      tags:
      - 文件管理
  /user-groups:
    get:
      consumes:
      - application/json
      description: 分页获取用户组列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.Response'
            - properties:
                data:
                  $ref: '#/definitions/controller.PageResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 获取用户组列表
      tags:
      - 用户组管理
    post:
      consumes:
      - application/json
      description: 创建新用户组
      parameters:
      - description: 用户组信息
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/controller.CreateUserGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.UserGroup'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 创建用户组
      tags:
      - 用户组管理
  /user-groups/{id}:
    delete:
      consumes:
      - application/json
      description: 删除用户组
      parameters:
      - description: 用户组ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 删除用户组
      tags:
      - 用户组管理
    get:
      consumes:
      - application/json
      description: 根据ID获取用户组详情
      parameters:
      - description: 用户组ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.UserGroup'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controller.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 获取用户组详情
      tags:
      - 用户组管理
    put:
      consumes:
      - application/json
      description: 更新用户组信息
      parameters:
      - description: 用户组ID
        in: path
        name: id
        required: true
        type: integer
      - description: 用户组信息
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateUserGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 更新用户组
      tags:
      - 用户组管理
  /users:
    get:
      consumes:
      - application/json
      description: 分页获取用户列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.Response'
            - properties:
                data:
                  $ref: '#/definitions/controller.PageResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 获取用户列表
      tags:
      - 用户管理
    post:
      consumes:
      - application/json
      description: 创建新用户
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controller.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 创建用户
      tags:
      - 用户管理
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: 删除用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 删除用户
      tags:
      - 用户管理
    get:
      consumes:
      - application/json
      description: 根据ID获取用户详情
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controller.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 获取用户详情
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      description: 更新用户信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - BearerAuth: []
      summary: 更新用户
      tags:
      - 用户管理
swagger: "2.0"
